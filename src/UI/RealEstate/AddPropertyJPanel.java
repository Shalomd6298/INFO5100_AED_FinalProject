/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI.RealEstate;

import Business.EcoSystem;
import Business.Network;
import Business.RealEstate.PropertyDirectory;
import Business.User.User;
import Business.User.UserDirectory;
import com.fasterxml.jackson.databind.JsonNode;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.github.javafaker.Faker;
import java.net.HttpURLConnection;
import java.net.URL;
import java.text.SimpleDateFormat;
import java.util.Scanner;
import javax.swing.JOptionPane;


public class AddPropertyJPanel extends javax.swing.JPanel {

    /**
     * Creates new form AddPropertyJPanel
     */
    private EcoSystem ecosystem;
    private Network network;
    private User user;
    private UserDirectory userDirectory;
    String response;
    
    public AddPropertyJPanel() {
        initComponents();
        
        this.ecosystem = this.ecosystem.getInstance();
        this.network = this.ecosystem.getNetwork();
        this.userDirectory = this.network.getUserDirectory();
        String response;
        
    }
    
    public AddPropertyJPanel(EcoSystem ecosystem, User user) {
        initComponents();
        this.setVisible(true);

        this.user = user;
        this.ecosystem = ecosystem;
        this.userDirectory = this.ecosystem.getNetwork().getUserDirectory();
        this.network = this.ecosystem.getNetwork();
        String response;
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        fieldBathrooms = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        fieldPrice = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        fieldAddress = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        fieldZip = new javax.swing.JTextField();
        fieldRooms = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        fieldCity = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        fieldState = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jComboBox2 = new javax.swing.JComboBox<>();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(41, 67, 138));
        jLabel1.setText("No. of Rooms:");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 60, 90, 20));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(41, 67, 138));
        jLabel2.setText("No. of Bathrooms: ");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 60, 140, -1));

        fieldBathrooms.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fieldBathroomsActionPerformed(evt);
            }
        });
        fieldBathrooms.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                fieldBathroomsKeyTyped(evt);
            }
        });
        add(fieldBathrooms, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 90, 120, 40));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(41, 67, 138));
        jLabel3.setText("Rent Price :");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 60, -1, -1));

        fieldPrice.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                fieldPriceKeyTyped(evt);
            }
        });
        add(fieldPrice, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 90, 140, 40));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(41, 67, 138));
        jLabel4.setText("Address:");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 160, -1, -1));
        add(fieldAddress, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 180, 330, 40));

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(41, 67, 138));
        jLabel5.setText("Zip code:");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 250, -1, -1));

        fieldZip.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                fieldZipKeyTyped(evt);
            }
        });
        add(fieldZip, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 270, 130, 40));

        fieldRooms.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fieldRoomsActionPerformed(evt);
            }
        });
        fieldRooms.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                fieldRoomsKeyTyped(evt);
            }
        });
        add(fieldRooms, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 90, 130, 40));

        jButton1.setBackground(new java.awt.Color(41, 67, 138));
        jButton1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/add.png"))); // NOI18N
        jButton1.setText("Add Property ");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 350, 171, 39));

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(41, 67, 138));
        jLabel7.setText("State: ");
        add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 160, 50, 20));

        fieldCity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fieldCityActionPerformed(evt);
            }
        });
        fieldCity.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                fieldCityKeyTyped(evt);
            }
        });
        add(fieldCity, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 180, 120, 40));

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(41, 67, 138));
        jLabel8.setText("City: ");
        add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 160, 50, -1));

        fieldState.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                fieldStateKeyTyped(evt);
            }
        });
        add(fieldState, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 180, 120, 40));

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(41, 67, 138));
        jLabel9.setText("Lease Type:");
        add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 250, 90, -1));

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "True", "False" }));
        add(jComboBox1, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 270, 120, 40));

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "6 months", "12 months" }));
        add(jComboBox2, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 270, 120, 40));

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(41, 67, 138));
        jLabel10.setText("Availability Status:");
        add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 250, 110, -1));

        jLabel11.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(41, 67, 138));
        jLabel11.setText("Start Date: ");
        add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 250, -1, -1));

        jLabel12.setFont(new java.awt.Font("Baskerville Old Face", 1, 18)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(41, 67, 138));
        jLabel12.setText("Add Property");
        add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 0, 140, 30));

        jLabel13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/prop.jpg"))); // NOI18N
        add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 340, 610, 400));
        add(jDateChooser1, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 270, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:

        if (fieldAddress.getText().isEmpty() || fieldBathrooms.getText().isEmpty()|| fieldCity.getText().isEmpty()
                || fieldPrice.getText().isEmpty()|| fieldRooms.getText().isEmpty()|| fieldState.getText().isEmpty()|| fieldZip.getText().isEmpty() 
                || (jDateChooser1.getDate() == null)) {
            
            JOptionPane.showMessageDialog(this, "Please enter all details !");
//            clearAllFields();
            return;
            
        }else{
            
            Faker faker = new Faker();
        
            String ID = faker.regexify("P_[a-z]{4}");
            
            Integer no_of_rooms = Integer.valueOf(fieldRooms.getText());
            Integer no_of_bathrooms = Integer.valueOf(fieldBathrooms.getText());
            Float price = Float.valueOf(fieldPrice.getText());
            String address = fieldAddress.getText();
            String city = fieldCity.getText();
            String state = fieldState.getText();
            Double zip = Double.valueOf(fieldZip.getText());
            String leaseType = String.valueOf(jComboBox2.getSelectedItem());
            String isAvailable = String.valueOf(jComboBox1.getSelectedItem());

            SimpleDateFormat sdf = new SimpleDateFormat("dd-MM-yyyy");
            String start_date = sdf.format(jDateChooser1.getDate());

            Boolean availability_status ;
            if(isAvailable.equals("True")){
                availability_status = true;
            }else{
                availability_status = false;
            }


            try {

                String full_address = address + " " + city + " " + state ;
                String main_addr = full_address.replaceAll("[\\s,]+", "+");
//                System.out.println(main_addr);
                String apikey = "UMgF7ZjU93iMPv1a3oFjvSVXNMgMVGPM";
                String API_URL = "https://www.mapquestapi.com/geocoding/v1/address?key=" + apikey + "&inFormat=kvp&outFormat=json&location=" + main_addr + "&thumbMaps=false";

//                System.out.println(API_URL);

                URL uRL = new URL(API_URL);

                HttpURLConnection connection = (HttpURLConnection) uRL.openConnection();
                connection.setRequestMethod("GET");
                connection.setRequestProperty("Accept", "application/json");

                Scanner scanner = new Scanner(connection.getInputStream());
                this.response = scanner.useDelimiter("\\A").next();

    //            System.out.println("\nresponse \n" + response);

    //          Parse the JSON string into a JsonNode object
                ObjectMapper objectMapper = new ObjectMapper();
                JsonNode rootNode = objectMapper.readTree(response);

                // Extracting the latitude and longitude values
                JsonNode locationNode = rootNode.get("results").get(0).get("locations").get(0).get("latLng");
                double latitude = locationNode.get("lat").asDouble();
                double longitude = locationNode.get("lng").asDouble();

                PropertyDirectory propertyDirectory = this.network.getPropertyDirectory();
                propertyDirectory.createProperty(ID, no_of_rooms, no_of_bathrooms, address, city, state, zip, price, leaseType, start_date, availability_status, latitude, longitude);    
    //            System.out.println(propertyDirectory.getProperties().size());

//                System.out.println("Latitude: " + latitude);
//                System.out.println("Longitude: " + longitude);

                scanner.close();
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "GMAPS API connectivity issue - " + e);
            }

            JOptionPane.showMessageDialog(null, "New Property added with ID : " + "'" + ID + "'" );
            clearAllFields();           
        }
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void fieldRoomsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fieldRoomsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fieldRoomsActionPerformed

    private void fieldBathroomsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fieldBathroomsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fieldBathroomsActionPerformed

    private void fieldCityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fieldCityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fieldCityActionPerformed

    private void fieldRoomsKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_fieldRoomsKeyTyped
        // TODO add your handling code here:
        
        char c =  evt.getKeyChar();
        if(!Character.isDigit(c)){
            evt.consume();
        }
        
    }//GEN-LAST:event_fieldRoomsKeyTyped

    private void fieldBathroomsKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_fieldBathroomsKeyTyped
        // TODO add your handling code here:
        
        char c =  evt.getKeyChar();
        if(!Character.isDigit(c)){
            evt.consume();
        }
    }//GEN-LAST:event_fieldBathroomsKeyTyped

    private void fieldPriceKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_fieldPriceKeyTyped
        // TODO add your handling code here:
       
        char c =  evt.getKeyChar();
        if(!Character.isDigit(c)){
            evt.consume();
        }        
    }//GEN-LAST:event_fieldPriceKeyTyped

    private void fieldZipKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_fieldZipKeyTyped
        // TODO add your handling code here:
      
        char c =  evt.getKeyChar();
        if(!Character.isDigit(c)){
            evt.consume();
        }        
        
    }//GEN-LAST:event_fieldZipKeyTyped

    private void fieldCityKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_fieldCityKeyTyped
        // TODO add your handling code here:
        
        char c =  evt.getKeyChar();
        if(!Character.isAlphabetic(c)){
            evt.consume();
        }
    }//GEN-LAST:event_fieldCityKeyTyped

    private void fieldStateKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_fieldStateKeyTyped
        // TODO add your handling code here:
        
        char c =  evt.getKeyChar();
        if(!Character.isAlphabetic(c)){
            evt.consume();
        }
        
    }//GEN-LAST:event_fieldStateKeyTyped

        private void clearAllFields() {
        fieldAddress.setText("");
        fieldBathrooms.setText("");
        fieldCity.setText("");
        fieldPrice.setText("");
        fieldRooms.setText("");
        fieldState.setText("");
        fieldZip.setText("");
        jDateChooser1.setDate(null);
    }

    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField fieldAddress;
    private javax.swing.JTextField fieldBathrooms;
    private javax.swing.JTextField fieldCity;
    private javax.swing.JTextField fieldPrice;
    private javax.swing.JTextField fieldRooms;
    private javax.swing.JTextField fieldState;
    private javax.swing.JTextField fieldZip;
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    // End of variables declaration//GEN-END:variables
}
