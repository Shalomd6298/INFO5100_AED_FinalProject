/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI.Customer;

import Business.Customer.Customer;
import Business.EcoSystem;
import Business.Network;
import Business.Recreation.Room;
import Business.User.User;
import Business.User.UserDirectory;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.UUID;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;



public class BookRecreationRoomsJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ViewCustomers
     */
    
    private EcoSystem ecosystem;
    private Network network;
    private User user;
    private UserDirectory userDirectory;
    DefaultTableModel tableModel; 
    String selectedRoom ;
    String app_date;
    
    public BookRecreationRoomsJPanel() {
        initComponents();
        
        this.ecosystem = this.ecosystem.getInstance();
        this.network = this.ecosystem.getNetwork();
        this.userDirectory = this.network.getUserDirectory();
        
    }
    
    public BookRecreationRoomsJPanel(EcoSystem ecosystem, User user) {
        initComponents();
        this.setVisible(true);

        this.user = user;
        this.ecosystem = ecosystem;
        this.userDirectory = this.ecosystem.getNetwork().getUserDirectory();
        this.network = this.ecosystem.getNetwork();
        this.tableModel = (DefaultTableModel) jTable1.getModel();
        
        populate();
        
    }
    
    
    
    public void populate() {
        
        tableModel.setRowCount(0);
        for(Room r : this.network.getRoomDirectory().getRooms()){
                    
                   Object[] row = new Object[10];

                   row[0] = r.getRoomID();
                   row[1] = r.getAvailability(); 

                   tableModel.addRow(row);                   
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        timePicker1 = new com.raven.swing.TimePicker();
        timePicker2 = new com.raven.swing.TimePicker();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton3 = new javax.swing.JButton();
        timeBtn = new javax.swing.JButton();
        fieldTime = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        timeEndBtn = new javax.swing.JButton();
        fieldTime1 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();

        timePicker1.setDisplayText(fieldTime);

        timePicker2.setDisplayText(fieldTime1);

        setBackground(new java.awt.Color(255, 255, 255));
        setPreferredSize(new java.awt.Dimension(1200, 1000));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTable1.setForeground(new java.awt.Color(41, 67, 138));
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Room ID", "Current Availability "
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 60, 770, 130));

        jButton3.setBackground(new java.awt.Color(41, 67, 138));
        jButton3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButton3.setForeground(new java.awt.Color(255, 255, 255));
        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/accept.png"))); // NOI18N
        jButton3.setText("Book Room");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 320, 170, 40));

        timeBtn.setBackground(new java.awt.Color(41, 67, 138));
        timeBtn.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        timeBtn.setForeground(new java.awt.Color(255, 255, 255));
        timeBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/time.png"))); // NOI18N
        timeBtn.setText("Pick Start Time");
        timeBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                timeBtnActionPerformed(evt);
            }
        });
        add(timeBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 290, 170, 40));
        add(fieldTime, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 290, 150, 40));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(41, 67, 138));
        jLabel1.setText("Select Booking Date :");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 210, 150, 30));

        timeEndBtn.setBackground(new java.awt.Color(41, 67, 138));
        timeEndBtn.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        timeEndBtn.setForeground(new java.awt.Color(255, 255, 255));
        timeEndBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/time.png"))); // NOI18N
        timeEndBtn.setText("Pick End Time");
        timeEndBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                timeEndBtnActionPerformed(evt);
            }
        });
        add(timeEndBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 370, 170, 40));
        add(fieldTime1, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 370, 150, 40));

        jLabel2.setFont(new java.awt.Font("Baskerville Old Face", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(41, 67, 138));
        jLabel2.setText("Book Recreation Rooms");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 10, -1, -1));

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/recreationroom.jpg"))); // NOI18N
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 400, 590, 320));
        add(jDateChooser1, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 210, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void timeBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_timeBtnActionPerformed
        // TODO add your handling code here:

        timePicker1.showPopup(this, 100, 100);
    }//GEN-LAST:event_timeBtnActionPerformed

    private void timeEndBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_timeEndBtnActionPerformed
        // TODO add your handling code here:
        timePicker2.showPopup(this, 100, 100);
    }//GEN-LAST:event_timeEndBtnActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:

        Customer c = this.network.getCustomerDirectory().findCustomer(user.getUserId());
        int selectedRow = jTable1.getSelectedRow();

        if(selectedRow >= 0){
            this.selectedRoom = (String) jTable1.getValueAt(selectedRow, 0);

                      

            jDateChooser1.setDate(Calendar.getInstance().getTime());
            Date selectedDate = jDateChooser1.getDate();
            // Get today's date
            Calendar today = Calendar.getInstance();
            today.set(Calendar.HOUR_OF_DAY, 0);
            today.set(Calendar.MINUTE, 0);
            today.set(Calendar.SECOND, 0);
            today.set(Calendar.MILLISECOND, 0);  

            // Compare the selected date with today's date
            if (selectedDate.before(today.getTime())) {
                JOptionPane.showMessageDialog(null, "Selected date cannot be before today's date.");
            } else {

                SimpleDateFormat sdf = new SimpleDateFormat("dd-MM-yyyy");
                this.app_date = sdf.format(selectedDate);
                
                timePicker1.addActionListener(new ActionListener() {
                    @Override
                    public void actionPerformed(ActionEvent ae){
                        String start_time = timePicker1.getSelectedTime();
                    }
                });

                timePicker2.addActionListener(new ActionListener() {
                    @Override
                    public void actionPerformed(ActionEvent ae){
                        String end_time = timePicker1.getSelectedTime();
                    }
                }); 

                String start_time = timePicker1.getSelectedTime();
                String end_time = timePicker2.getSelectedTime();

                Room r = this.network.getRoomDirectory().findRoomByID(selectedRoom);

                UUID uuid = UUID.randomUUID();
                String randomUUIDString = uuid.toString();

                if(r.checkTimeSlotAvailability(app_date, start_time, end_time) == true){
                    r.addBooking(randomUUIDString, app_date, start_time, end_time, c);

                }else{
                    JOptionPane.showMessageDialog(null, "Sorry there seems to be a Time slot conflict. Please select another time slot!");
                }
                clearFields();        

            }

        }else{
            JOptionPane.showMessageDialog(null, "Please select a Row ");
        }
        
        
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jDateChooser1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jDateChooser1MousePressed
        // TODO add your handling code here:       
    }//GEN-LAST:event_jDateChooser1MousePressed

    private void jDateChooser1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jDateChooser1FocusLost
        // TODO add your handling code here: 
    }//GEN-LAST:event_jDateChooser1FocusLost

    public void clearFields(){
        jDateChooser1.setDate(null);
        fieldTime.setText("");
        fieldTime1.setText("");
    }

    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField fieldTime;
    private javax.swing.JTextField fieldTime1;
    private javax.swing.JButton jButton3;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JButton timeBtn;
    private javax.swing.JButton timeEndBtn;
    private com.raven.swing.TimePicker timePicker1;
    private com.raven.swing.TimePicker timePicker2;
    // End of variables declaration//GEN-END:variables
}
