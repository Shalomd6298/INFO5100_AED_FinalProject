/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UI.LaundaryServices;

import Business.EcoSystem;
import Business.PropertyManagement.Laundary;
import Business.Network;
import Business.User.User;
import Business.User.UserDirectory;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;


public class ManagerLaundaryJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManagerLaundaryJPanel
     */
    private EcoSystem ecosystem;
    private Network network;
    private User user;
    private UserDirectory userDirectory;
    String mainValidationString = "";
    String validationString1 = "";
    String validationString2 = "";
    
    public ManagerLaundaryJPanel() {
        initComponents();
        
        this.ecosystem = this.ecosystem.getInstance();
        this.network = this.ecosystem.getNetwork();
        this.userDirectory = this.network.getUserDirectory();
    }

    public ManagerLaundaryJPanel(EcoSystem ecosystem, User user) {
        initComponents();
        this.setVisible(true);

        this.user = user;
        this.ecosystem = ecosystem;
        this.userDirectory = this.ecosystem.getNetwork().getUserDirectory();
        this.network = this.ecosystem.getNetwork();
        
        populateTable();
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    
    private void resetLaundryData() {
        txtCategory.setText("");
        txtPrice.setText("");
    }
    
    public boolean areDataFieldsEmpty() {
        validationString1 = "";
        if (txtCategory.getText().isEmpty()) {
            validationString1 += "Category, ";
        }
       
        if (txtPrice.getText().isEmpty()) {
            validationString1 += "Price, ";
        }
        
        return isNotValid(validationString1);
    }

    public boolean areDataTypesCorrect() {
        validationString2 = "";
        if (!validateFloatDataType(txtPrice.getText())) {
            validationString2 += "Price, ";
        }
        return isNotValid(validationString2);
    }

    public boolean isNotValid(String str) {
        if (str.equals("")) {
            return false;
        } else {
            return true;
        }
    }

    public boolean validateFloatDataType(String str) {
        try {
            Float.parseFloat(str);
        } catch (NumberFormatException e) {
            return false;
        }
        return true;
    }

    public void validationErrorMessagesDialog(boolean validation1, boolean validation2) {
        if (validation1) {
            mainValidationString = validationString1;
            JOptionPane.showMessageDialog(this, "Please update the data for these fields: " + mainValidationString);
        } else if (validation2) {
            mainValidationString = validationString2;
            JOptionPane.showMessageDialog(this, "Please enter only numbers for these fields: " + mainValidationString);
        }
    }
    
    private boolean laundryDetailsExistence() {
        String category = txtCategory.getText();
        boolean exist = false;
            for (Laundary laundry : network.getLaundarydirectory().getLaundryDirectory()) {
                if (category.equals(laundry.getCategory())) {
                    exist = true;
                    break;
                }
            }
        return exist;
    }
    
    private void populateTable() {

        DefaultTableModel model = (DefaultTableModel) tblLaundry.getModel();

        model.setRowCount(0);

        for (Laundary laundry : network.getLaundarydirectory().getLaundryDirectory()) {
            Object[] row = new Object[2];

            row[0] = laundry;
            row[1] = laundry.getPrice();

            model.addRow(row);
        }
    }
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblLaundry = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtCategory = new javax.swing.JTextField();
        txtPrice = new javax.swing.JTextField();
        btnAdd = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnView = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tblLaundry.setForeground(new java.awt.Color(41, 67, 138));
        tblLaundry.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Laundry Category", "Price"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblLaundry);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 70, 520, 100));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(41, 67, 138));
        jLabel2.setText("Price per cloth ($): ");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 200, -1, -1));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(41, 67, 138));
        jLabel3.setText("Laundry Category:");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 200, -1, -1));
        add(txtCategory, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 220, 160, 30));
        add(txtPrice, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 220, 170, 30));

        btnAdd.setBackground(new java.awt.Color(41, 67, 138));
        btnAdd.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnAdd.setForeground(new java.awt.Color(255, 255, 255));
        btnAdd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/add.png"))); // NOI18N
        btnAdd.setText("Add");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });
        add(btnAdd, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 310, 110, 40));

        btnDelete.setBackground(new java.awt.Color(41, 67, 138));
        btnDelete.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnDelete.setForeground(new java.awt.Color(255, 255, 255));
        btnDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/delete.png"))); // NOI18N
        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });
        add(btnDelete, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 310, 110, 40));

        btnView.setBackground(new java.awt.Color(41, 67, 138));
        btnView.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnView.setForeground(new java.awt.Color(255, 255, 255));
        btnView.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/view.png"))); // NOI18N
        btnView.setText("View");
        btnView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewActionPerformed(evt);
            }
        });
        add(btnView, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 310, 110, 40));

        btnUpdate.setBackground(new java.awt.Color(41, 67, 138));
        btnUpdate.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnUpdate.setForeground(new java.awt.Color(255, 255, 255));
        btnUpdate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/update.png"))); // NOI18N
        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });
        add(btnUpdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 310, 110, 40));

        jLabel1.setFont(new java.awt.Font("Baskerville Old Face", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(41, 67, 138));
        jLabel1.setText("Manage Laundry Plans");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 0, 250, 30));

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/managelaundry.jpg"))); // NOI18N
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 330, 560, 350));
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        // TODO add your handling code here:
        try {
            boolean validation1 = areDataFieldsEmpty();
            boolean validation2 = areDataTypesCorrect();

            if (!validation1 && !validation2) {
                String laundryName = txtCategory.getText();
                Float price = Float.parseFloat(txtPrice.getText());

                if (!laundryDetailsExistence()) {
                    Laundary laundry = network.getLaundarydirectory().addLaundryDetails();
                    laundry.setCategory(laundryName);
                    laundry.setPrice(price);

                    JOptionPane.showMessageDialog(this, "Laundry category - " + laundryName + " added");
                    resetLaundryData();
                    populateTable();
                } else {
                    JOptionPane.showMessageDialog(this, "Laundry category details already exists with the category name"
                        + " : " + laundryName);
                }
            } else {
                validationErrorMessagesDialog(validation1, validation2);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        try {
            int selectedRowIndex = tblLaundry.getSelectedRow();

            if (selectedRowIndex < 0) {
                JOptionPane.showMessageDialog(this, "Please select a row for deletion");
                return;
            }

            DefaultTableModel model = (DefaultTableModel) tblLaundry.getModel();
            Laundary selectedLaundry = (Laundary) model.getValueAt(selectedRowIndex, 0);

            network.getLaundarydirectory().deleteLaundry(selectedLaundry);

            JOptionPane.showMessageDialog(this, "Laundry category Deleted");

            populateTable();
            resetLaundryData();

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewActionPerformed
        // TODO add your handling code here:
        try {
            int selectedRowIndex = tblLaundry.getSelectedRow();

            if (selectedRowIndex < 0) {
                JOptionPane.showMessageDialog(this, "Please select a row for viewing");
                return;
            }

            DefaultTableModel model = (DefaultTableModel) tblLaundry.getModel();
            Laundary selectedLaundry = (Laundary) model.getValueAt(selectedRowIndex, 0);

            txtCategory.setText(selectedLaundry.getCategory());
            txtPrice.setText(String.valueOf(selectedLaundry.getPrice()));
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
    }//GEN-LAST:event_btnViewActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
        try {
            DefaultTableModel model = (DefaultTableModel) tblLaundry.getModel();

            if (tblLaundry.getSelectedRowCount() == 1) {

                String laundryName = txtCategory.getText();
                float price = Float.parseFloat(txtPrice.getText());

                int selectedRowIndex = tblLaundry.getSelectedRow();
                Laundary laundry = network.getLaundarydirectory().getLaundries(selectedRowIndex);

                laundry.setCategory(laundryName);
                laundry.setPrice(price);

                populateTable();
                resetLaundryData();

                JOptionPane.showMessageDialog(this, "Update successful!");
            } else if (tblLaundry.getRowCount() == 0) {
                JOptionPane.showMessageDialog(this, "Table is empty");
            } else {
                JOptionPane.showMessageDialog(this, "Please select single row");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
    }//GEN-LAST:event_btnUpdateActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JButton btnView;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblLaundry;
    private javax.swing.JTextField txtCategory;
    private javax.swing.JTextField txtPrice;
    // End of variables declaration//GEN-END:variables
}
